####
# This Dockerfile is used to build the application for JVM mode
# Before building the container image run:
#
# ./mvnw package
#
# Then, build the image with:
#
# docker build -f src/main/docker/Dockerfile.jvm -t quarkus/bank-account-management-jvm .
#
# Then run the container using:
#
# docker run -i --rm -p 8080:8080 quarkus/bank-account-management-jvm
#
# If you want to include the debug port into your docker image
# you will have to expose the debug port (default 5005 being the default) like this :  EXPOSE 8080 5005.
#
# Then run the container using :
#
# docker run -i --rm -p 8080:8080 quarkus/bank-account-management-jvm
#
###
FROM registry.access.redhat.com/ubi9/ubi as build

WORKDIR /workspace/app

# Install required packages
RUN dnf -y install git maven java-17-openjdk-devel && \
    dnf clean all

# Set JAVA_HOME
ENV JAVA_HOME=/usr/lib/jvm/java-17-openjdk

# Clone the repository
RUN git clone https://github.com/mmartofel/bank-account-management

# Maven build with debug output
RUN cd bank-account-management/backend && \
    mvn clean package -e -DskipTests

# Stage 2: Create the runtime image
FROM registry.access.redhat.com/ubi9/openjdk-17:1.21-2

ENV LANGUAGE='en_US:en'

# Copy the built artifacts
COPY --from=build /workspace/app/bank-account-management/backend/target/quarkus-app/lib/ /deployments/lib/
COPY --from=build /workspace/app/bank-account-management/backend/target/quarkus-app/*.jar /deployments/
COPY --from=build /workspace/app/bank-account-management/backend/target/quarkus-app/app/ /deployments/app/
COPY --from=build /workspace/app/bank-account-management/backend/target/quarkus-app/quarkus/ /deployments/quarkus/

ENV JAVA_OPTS="-Dquarkus.http.host=0.0.0.0 -Djava.util.logging.manager=org.jboss.logmanager.LogManager"
ENV JAVA_APP_JAR="/deployments/quarkus-run.jar"

EXPOSE 8080
USER 185
ENTRYPOINT [ "/opt/jboss/container/java/run/run-java.sh" ]
